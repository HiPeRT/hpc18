

================================================================
== Vivado HLS Report for 'copyMem'
================================================================
* Date:           Fri May 17 15:01:59 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        hls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         2|          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / (!exitcond)
	11  / (exitcond)
10 --> 
	9  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 15 [1/1] (1.00ns)   --->   "%bytes_read = call i64 @_ssdm_op_Read.s_axilite.i64(i64 %bytes)"   --->   Operation 15 'read' 'bytes_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 16 [1/1] (1.00ns)   --->   "%src_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %src)"   --->   Operation 16 'read' 'src_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 17 [1/1] (1.00ns)   --->   "%dst_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %dst)"   --->   Operation 17 'read' 'dst_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_1 = sext i32 %src_read to i64"   --->   Operation 18 'sext' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%ddr_addr = getelementptr i8* %ddr, i64 %tmp_1"   --->   Operation 19 'getelementptr' 'ddr_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_2 = sext i32 %dst_read to i64"   --->   Operation 20 'sext' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%ddr_addr_1 = getelementptr i8* %ddr, i64 %tmp_2"   --->   Operation 21 'getelementptr' 'ddr_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%tmp = trunc i64 %bytes_read to i32"   --->   Operation 22 'trunc' 'tmp' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 23 [7/7] (8.75ns)   --->   "%ddr_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %ddr_addr, i32 %tmp)" [hls/copyMem.cpp:13]   --->   Operation 23 'readreq' 'ddr_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 24 [1/1] (8.75ns)   --->   "%ddr_addr_1_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %ddr_addr_1, i32 %tmp)" [hls/copyMem.cpp:13]   --->   Operation 24 'writereq' 'ddr_addr_1_wr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 25 [6/7] (8.75ns)   --->   "%ddr_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %ddr_addr, i32 %tmp)" [hls/copyMem.cpp:13]   --->   Operation 25 'readreq' 'ddr_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 26 [5/7] (8.75ns)   --->   "%ddr_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %ddr_addr, i32 %tmp)" [hls/copyMem.cpp:13]   --->   Operation 26 'readreq' 'ddr_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 27 [4/7] (8.75ns)   --->   "%ddr_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %ddr_addr, i32 %tmp)" [hls/copyMem.cpp:13]   --->   Operation 27 'readreq' 'ddr_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 28 [3/7] (8.75ns)   --->   "%ddr_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %ddr_addr, i32 %tmp)" [hls/copyMem.cpp:13]   --->   Operation 28 'readreq' 'ddr_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 29 [2/7] (8.75ns)   --->   "%ddr_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %ddr_addr, i32 %tmp)" [hls/copyMem.cpp:13]   --->   Operation 29 'readreq' 'ddr_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %ddr), !map !10"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 %bytes) nounwind, !map !17"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @copyMem_str) nounwind"   --->   Operation 32 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %ddr, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [4 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls/copyMem.cpp:6]   --->   Operation 33 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %dst, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls/copyMem.cpp:6]   --->   Operation 34 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %src, [10 x i8]* @mode1, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls/copyMem.cpp:7]   --->   Operation 35 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64 %bytes, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls/copyMem.cpp:9]   --->   Operation 36 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls/copyMem.cpp:10]   --->   Operation 37 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 38 [1/7] (8.75ns)   --->   "%ddr_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %ddr_addr, i32 %tmp)" [hls/copyMem.cpp:13]   --->   Operation 38 'readreq' 'ddr_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 39 [1/1] (1.76ns)   --->   "br label %1" [hls/copyMem.cpp:12]   --->   Operation 39 'br' <Predicate = true> <Delay = 1.76>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 40 [1/1] (0.00ns)   --->   "%i = phi i64 [ 0, %0 ], [ %i_1, %2 ]"   --->   Operation 40 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 41 [1/1] (2.77ns)   --->   "%exitcond = icmp eq i64 %i, %bytes_read" [hls/copyMem.cpp:12]   --->   Operation 41 'icmp' 'exitcond' <Predicate = true> <Delay = 2.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 42 [1/1] (3.52ns)   --->   "%i_1 = add i64 %i, 1" [hls/copyMem.cpp:12]   --->   Operation 42 'add' 'i_1' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %3, label %2" [hls/copyMem.cpp:12]   --->   Operation 43 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 44 [1/1] (8.75ns)   --->   "%ddr_addr_read = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %ddr_addr)" [hls/copyMem.cpp:13]   --->   Operation 44 'read' 'ddr_addr_read' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 45 [5/5] (8.75ns)   --->   "%ddr_addr_1_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %ddr_addr_1)" [hls/copyMem.cpp:13]   --->   Operation 45 'writeresp' 'ddr_addr_1_wr_resp' <Predicate = (exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 46 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %ddr_addr_1, i8 %ddr_addr_read, i1 true)" [hls/copyMem.cpp:13]   --->   Operation 46 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 47 [1/1] (0.00ns)   --->   "br label %1" [hls/copyMem.cpp:12]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>

State 11 <SV = 9> <Delay = 8.75>
ST_11 : Operation 48 [4/5] (8.75ns)   --->   "%ddr_addr_1_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %ddr_addr_1)" [hls/copyMem.cpp:13]   --->   Operation 48 'writeresp' 'ddr_addr_1_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 10> <Delay = 8.75>
ST_12 : Operation 49 [3/5] (8.75ns)   --->   "%ddr_addr_1_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %ddr_addr_1)" [hls/copyMem.cpp:13]   --->   Operation 49 'writeresp' 'ddr_addr_1_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 11> <Delay = 8.75>
ST_13 : Operation 50 [2/5] (8.75ns)   --->   "%ddr_addr_1_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %ddr_addr_1)" [hls/copyMem.cpp:13]   --->   Operation 50 'writeresp' 'ddr_addr_1_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 12> <Delay = 8.75>
ST_14 : Operation 51 [1/5] (8.75ns)   --->   "%ddr_addr_1_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %ddr_addr_1)" [hls/copyMem.cpp:13]   --->   Operation 51 'writeresp' 'ddr_addr_1_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 52 [1/1] (0.00ns)   --->   "ret void" [hls/copyMem.cpp:15]   --->   Operation 52 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ ddr]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ dst]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ src]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ bytes]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
bytes_read         (read         ) [ 001111111110000]
src_read           (read         ) [ 000000000000000]
dst_read           (read         ) [ 000000000000000]
tmp_1              (sext         ) [ 000000000000000]
ddr_addr           (getelementptr) [ 001111111110000]
tmp_2              (sext         ) [ 000000000000000]
ddr_addr_1         (getelementptr) [ 001111111111111]
tmp                (trunc        ) [ 001111111000000]
ddr_addr_1_wr_req  (writereq     ) [ 000000000000000]
StgValue_30        (specbitsmap  ) [ 000000000000000]
StgValue_31        (specbitsmap  ) [ 000000000000000]
StgValue_32        (spectopmodule) [ 000000000000000]
StgValue_33        (specinterface) [ 000000000000000]
StgValue_34        (specinterface) [ 000000000000000]
StgValue_35        (specinterface) [ 000000000000000]
StgValue_36        (specinterface) [ 000000000000000]
StgValue_37        (specinterface) [ 000000000000000]
ddr_addr_rd_req    (readreq      ) [ 000000000000000]
StgValue_39        (br           ) [ 000000001110000]
i                  (phi          ) [ 000000000100000]
exitcond           (icmp         ) [ 000000000110000]
i_1                (add          ) [ 000000001110000]
StgValue_43        (br           ) [ 000000000000000]
ddr_addr_read      (read         ) [ 000000000010000]
StgValue_46        (write        ) [ 000000000000000]
StgValue_47        (br           ) [ 000000001110000]
ddr_addr_1_wr_resp (writeresp    ) [ 000000000000000]
StgValue_52        (ret          ) [ 000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="ddr">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="ddr"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="dst">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="dst"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="src">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="src"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="bytes">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="bytes"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.s_axilite.i64"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.s_axilite.i32"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="copyMem_str"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="mode"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="bundle"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="mode1"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="bundle2"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1004" name="bytes_read_read_fu_60">
<pin_list>
<pin id="61" dir="0" index="0" bw="64" slack="0"/>
<pin id="62" dir="0" index="1" bw="64" slack="0"/>
<pin id="63" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="bytes_read/1 "/>
</bind>
</comp>

<comp id="66" class="1004" name="src_read_read_fu_66">
<pin_list>
<pin id="67" dir="0" index="0" bw="32" slack="0"/>
<pin id="68" dir="0" index="1" bw="32" slack="0"/>
<pin id="69" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="src_read/1 "/>
</bind>
</comp>

<comp id="72" class="1004" name="dst_read_read_fu_72">
<pin_list>
<pin id="73" dir="0" index="0" bw="32" slack="0"/>
<pin id="74" dir="0" index="1" bw="32" slack="0"/>
<pin id="75" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="dst_read/1 "/>
</bind>
</comp>

<comp id="78" class="1004" name="grp_readreq_fu_78">
<pin_list>
<pin id="79" dir="0" index="0" bw="1" slack="0"/>
<pin id="80" dir="0" index="1" bw="8" slack="1"/>
<pin id="81" dir="0" index="2" bw="32" slack="1"/>
<pin id="82" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="ddr_addr_rd_req/2 "/>
</bind>
</comp>

<comp id="84" class="1004" name="grp_writeresp_fu_84">
<pin_list>
<pin id="85" dir="0" index="0" bw="1" slack="0"/>
<pin id="86" dir="0" index="1" bw="8" slack="1"/>
<pin id="87" dir="0" index="2" bw="32" slack="1"/>
<pin id="88" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="ddr_addr_1_wr_req/2 ddr_addr_1_wr_resp/9 "/>
</bind>
</comp>

<comp id="90" class="1004" name="ddr_addr_read_read_fu_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="8" slack="0"/>
<pin id="92" dir="0" index="1" bw="8" slack="8"/>
<pin id="93" dir="1" index="2" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="ddr_addr_read/9 "/>
</bind>
</comp>

<comp id="96" class="1004" name="StgValue_46_write_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="0" slack="0"/>
<pin id="98" dir="0" index="1" bw="8" slack="9"/>
<pin id="99" dir="0" index="2" bw="8" slack="1"/>
<pin id="100" dir="0" index="3" bw="1" slack="0"/>
<pin id="101" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_46/10 "/>
</bind>
</comp>

<comp id="104" class="1005" name="i_reg_104">
<pin_list>
<pin id="105" dir="0" index="0" bw="64" slack="1"/>
<pin id="106" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="i (phireg) "/>
</bind>
</comp>

<comp id="108" class="1004" name="i_phi_fu_108">
<pin_list>
<pin id="109" dir="0" index="0" bw="1" slack="1"/>
<pin id="110" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="111" dir="0" index="2" bw="64" slack="0"/>
<pin id="112" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="113" dir="1" index="4" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i/9 "/>
</bind>
</comp>

<comp id="115" class="1004" name="tmp_1_fu_115">
<pin_list>
<pin id="116" dir="0" index="0" bw="32" slack="0"/>
<pin id="117" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="tmp_1/1 "/>
</bind>
</comp>

<comp id="119" class="1004" name="ddr_addr_fu_119">
<pin_list>
<pin id="120" dir="0" index="0" bw="8" slack="0"/>
<pin id="121" dir="0" index="1" bw="32" slack="0"/>
<pin id="122" dir="1" index="2" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="ddr_addr/1 "/>
</bind>
</comp>

<comp id="125" class="1004" name="tmp_2_fu_125">
<pin_list>
<pin id="126" dir="0" index="0" bw="32" slack="0"/>
<pin id="127" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="tmp_2/1 "/>
</bind>
</comp>

<comp id="129" class="1004" name="ddr_addr_1_fu_129">
<pin_list>
<pin id="130" dir="0" index="0" bw="8" slack="0"/>
<pin id="131" dir="0" index="1" bw="32" slack="0"/>
<pin id="132" dir="1" index="2" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="ddr_addr_1/1 "/>
</bind>
</comp>

<comp id="135" class="1004" name="tmp_fu_135">
<pin_list>
<pin id="136" dir="0" index="0" bw="64" slack="0"/>
<pin id="137" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp/1 "/>
</bind>
</comp>

<comp id="139" class="1004" name="exitcond_fu_139">
<pin_list>
<pin id="140" dir="0" index="0" bw="64" slack="0"/>
<pin id="141" dir="0" index="1" bw="64" slack="8"/>
<pin id="142" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond/9 "/>
</bind>
</comp>

<comp id="144" class="1004" name="i_1_fu_144">
<pin_list>
<pin id="145" dir="0" index="0" bw="64" slack="0"/>
<pin id="146" dir="0" index="1" bw="1" slack="0"/>
<pin id="147" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i_1/9 "/>
</bind>
</comp>

<comp id="150" class="1005" name="bytes_read_reg_150">
<pin_list>
<pin id="151" dir="0" index="0" bw="64" slack="8"/>
<pin id="152" dir="1" index="1" bw="64" slack="8"/>
</pin_list>
<bind>
<opset="bytes_read "/>
</bind>
</comp>

<comp id="155" class="1005" name="ddr_addr_reg_155">
<pin_list>
<pin id="156" dir="0" index="0" bw="8" slack="1"/>
<pin id="157" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="ddr_addr "/>
</bind>
</comp>

<comp id="161" class="1005" name="ddr_addr_1_reg_161">
<pin_list>
<pin id="162" dir="0" index="0" bw="8" slack="1"/>
<pin id="163" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="ddr_addr_1 "/>
</bind>
</comp>

<comp id="167" class="1005" name="tmp_reg_167">
<pin_list>
<pin id="168" dir="0" index="0" bw="32" slack="1"/>
<pin id="169" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp "/>
</bind>
</comp>

<comp id="176" class="1005" name="i_1_reg_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="64" slack="0"/>
<pin id="178" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opset="i_1 "/>
</bind>
</comp>

<comp id="181" class="1005" name="ddr_addr_read_reg_181">
<pin_list>
<pin id="182" dir="0" index="0" bw="8" slack="1"/>
<pin id="183" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="ddr_addr_read "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="64"><net_src comp="8" pin="0"/><net_sink comp="60" pin=0"/></net>

<net id="65"><net_src comp="6" pin="0"/><net_sink comp="60" pin=1"/></net>

<net id="70"><net_src comp="10" pin="0"/><net_sink comp="66" pin=0"/></net>

<net id="71"><net_src comp="4" pin="0"/><net_sink comp="66" pin=1"/></net>

<net id="76"><net_src comp="10" pin="0"/><net_sink comp="72" pin=0"/></net>

<net id="77"><net_src comp="2" pin="0"/><net_sink comp="72" pin=1"/></net>

<net id="83"><net_src comp="12" pin="0"/><net_sink comp="78" pin=0"/></net>

<net id="89"><net_src comp="14" pin="0"/><net_sink comp="84" pin=0"/></net>

<net id="94"><net_src comp="52" pin="0"/><net_sink comp="90" pin=0"/></net>

<net id="95"><net_src comp="54" pin="0"/><net_sink comp="84" pin=0"/></net>

<net id="102"><net_src comp="56" pin="0"/><net_sink comp="96" pin=0"/></net>

<net id="103"><net_src comp="58" pin="0"/><net_sink comp="96" pin=3"/></net>

<net id="107"><net_src comp="48" pin="0"/><net_sink comp="104" pin=0"/></net>

<net id="114"><net_src comp="104" pin="1"/><net_sink comp="108" pin=0"/></net>

<net id="118"><net_src comp="66" pin="2"/><net_sink comp="115" pin=0"/></net>

<net id="123"><net_src comp="0" pin="0"/><net_sink comp="119" pin=0"/></net>

<net id="124"><net_src comp="115" pin="1"/><net_sink comp="119" pin=1"/></net>

<net id="128"><net_src comp="72" pin="2"/><net_sink comp="125" pin=0"/></net>

<net id="133"><net_src comp="0" pin="0"/><net_sink comp="129" pin=0"/></net>

<net id="134"><net_src comp="125" pin="1"/><net_sink comp="129" pin=1"/></net>

<net id="138"><net_src comp="60" pin="2"/><net_sink comp="135" pin=0"/></net>

<net id="143"><net_src comp="108" pin="4"/><net_sink comp="139" pin=0"/></net>

<net id="148"><net_src comp="108" pin="4"/><net_sink comp="144" pin=0"/></net>

<net id="149"><net_src comp="50" pin="0"/><net_sink comp="144" pin=1"/></net>

<net id="153"><net_src comp="60" pin="2"/><net_sink comp="150" pin=0"/></net>

<net id="154"><net_src comp="150" pin="1"/><net_sink comp="139" pin=1"/></net>

<net id="158"><net_src comp="119" pin="2"/><net_sink comp="155" pin=0"/></net>

<net id="159"><net_src comp="155" pin="1"/><net_sink comp="78" pin=1"/></net>

<net id="160"><net_src comp="155" pin="1"/><net_sink comp="90" pin=1"/></net>

<net id="164"><net_src comp="129" pin="2"/><net_sink comp="161" pin=0"/></net>

<net id="165"><net_src comp="161" pin="1"/><net_sink comp="84" pin=1"/></net>

<net id="166"><net_src comp="161" pin="1"/><net_sink comp="96" pin=1"/></net>

<net id="170"><net_src comp="135" pin="1"/><net_sink comp="167" pin=0"/></net>

<net id="171"><net_src comp="167" pin="1"/><net_sink comp="78" pin=2"/></net>

<net id="172"><net_src comp="167" pin="1"/><net_sink comp="84" pin=2"/></net>

<net id="179"><net_src comp="144" pin="2"/><net_sink comp="176" pin=0"/></net>

<net id="180"><net_src comp="176" pin="1"/><net_sink comp="108" pin=2"/></net>

<net id="184"><net_src comp="90" pin="2"/><net_sink comp="181" pin=0"/></net>

<net id="185"><net_src comp="181" pin="1"/><net_sink comp="96" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: ddr | {2 9 10 11 12 13 14 }
 - Input state : 
	Port: copyMem : ddr | {2 3 4 5 6 7 8 9 }
	Port: copyMem : dst | {1 }
	Port: copyMem : src | {1 }
	Port: copyMem : bytes | {1 }
  - Chain level:
	State 1
		ddr_addr : 1
		ddr_addr_1 : 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
		exitcond : 1
		i_1 : 1
		StgValue_43 : 2
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|--------------------------|---------|---------|
| Operation|      Functional Unit     |    FF   |   LUT   |
|----------|--------------------------|---------|---------|
|    add   |        i_1_fu_144        |    0    |    71   |
|----------|--------------------------|---------|---------|
|   icmp   |      exitcond_fu_139     |    0    |    29   |
|----------|--------------------------|---------|---------|
|          |   bytes_read_read_fu_60  |    0    |    0    |
|   read   |    src_read_read_fu_66   |    0    |    0    |
|          |    dst_read_read_fu_72   |    0    |    0    |
|          | ddr_addr_read_read_fu_90 |    0    |    0    |
|----------|--------------------------|---------|---------|
|  readreq |     grp_readreq_fu_78    |    0    |    0    |
|----------|--------------------------|---------|---------|
| writeresp|    grp_writeresp_fu_84   |    0    |    0    |
|----------|--------------------------|---------|---------|
|   write  |  StgValue_46_write_fu_96 |    0    |    0    |
|----------|--------------------------|---------|---------|
|   sext   |       tmp_1_fu_115       |    0    |    0    |
|          |       tmp_2_fu_125       |    0    |    0    |
|----------|--------------------------|---------|---------|
|   trunc  |        tmp_fu_135        |    0    |    0    |
|----------|--------------------------|---------|---------|
|   Total  |                          |    0    |   100   |
|----------|--------------------------|---------|---------|

Memories:
N/A

* Register list:
+---------------------+--------+
|                     |   FF   |
+---------------------+--------+
|  bytes_read_reg_150 |   64   |
|  ddr_addr_1_reg_161 |    8   |
|ddr_addr_read_reg_181|    8   |
|   ddr_addr_reg_155  |    8   |
|     i_1_reg_176     |   64   |
|      i_reg_104      |   64   |
|     tmp_reg_167     |   32   |
+---------------------+--------+
|        Total        |   248  |
+---------------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  |
|---------------------|------|------|------|--------||---------|
| grp_writeresp_fu_84 |  p0  |   2  |   1  |    2   |
|---------------------|------|------|------|--------||---------|
|        Total        |      |      |      |    2   ||  1.769  |
|---------------------|------|------|------|--------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   100  |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    1   |    -   |    -   |
|  Register |    -   |   248  |    -   |
+-----------+--------+--------+--------+
|   Total   |    1   |   248  |   100  |
+-----------+--------+--------+--------+
