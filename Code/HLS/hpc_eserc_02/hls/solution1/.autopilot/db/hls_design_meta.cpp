#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("led_out", 1, hls_out, 1, "ap_vld", "out_data", 1),
	Port_Property("led_out_ap_vld", 1, hls_out, 1, "ap_vld", "out_vld", 1),
	Port_Property("s_axi_ctrl_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_ctrl_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_ctrl_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_ctrl_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_ctrl_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_ctrl_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_ctrl_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_ctrl_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_ctrl_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_ctrl_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_ctrl_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_ctrl_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_ctrl_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_ctrl_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_ctrl_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_ctrl_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_ctrl_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "counter";
